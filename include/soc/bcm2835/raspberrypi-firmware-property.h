/*
 *  Copyright Â© 2015 Broadcom
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <linux/types.h>

enum raspberrypi_firmware_property_status {
	RASPBERRYPI_FIRMWARE_STATUS_REQUEST = 0,
	RASPBERRYPI_FIRMWARE_STATUS_SUCCESS = 0x80000000,
	RASPBERRYPI_FIRMWARE_STATUS_ERROR =   0x80000001,
};

struct raspberrypi_firmware_property_tag_header {
	/* One of enum_mbox_property_tag. */
	u32 tag;

	/* The number of bytes in the value buffer following this
	 * struct.
	 */
	u32 buf_size;

	/*
	 * On submit, the length of the request (though it doesn't
	 * appear to be currently used by the firmware).  On return,
	 * the length of the response (always 4 byte aligned), with
	 * the low bit set.
	 */
	u32 req_resp_size;
};

enum raspberrypi_firmware_property_tag {
	RASPBERRYPI_FIRMWARE_PROPERTY_END = 0,
	RASPBERRYPI_FIRMWARE_GET_FIRMWARE_REVISION =                  0x00000001,

	RASPBERRYPI_FIRMWARE_SET_CURSOR_INFO =                        0x00008010,
	RASPBERRYPI_FIRMWARE_SET_CURSOR_STATE =                       0x00008011,

	RASPBERRYPI_FIRMWARE_GET_BOARD_MODEL =                        0x00010001,
	RASPBERRYPI_FIRMWARE_GET_BOARD_REVISION =                     0x00010002,
	RASPBERRYPI_FIRMWARE_GET_BOARD_MAC_ADDRESS =                  0x00010003,
	RASPBERRYPI_FIRMWARE_GET_BOARD_SERIAL =                       0x00010004,
	RASPBERRYPI_FIRMWARE_GET_ARM_MEMORY =                         0x00010005,
	RASPBERRYPI_FIRMWARE_GET_VC_MEMORY =                          0x00010006,
	RASPBERRYPI_FIRMWARE_GET_CLOCKS =                             0x00010007,
	RASPBERRYPI_FIRMWARE_GET_POWER_STATE =                        0x00020001,
	RASPBERRYPI_FIRMWARE_GET_TIMING =                             0x00020002,
	RASPBERRYPI_FIRMWARE_SET_POWER_STATE =                        0x00028001,
	RASPBERRYPI_FIRMWARE_GET_CLOCK_STATE =                        0x00030001,
	RASPBERRYPI_FIRMWARE_GET_CLOCK_RATE =                         0x00030002,
	RASPBERRYPI_FIRMWARE_GET_VOLTAGE =                            0x00030003,
	RASPBERRYPI_FIRMWARE_GET_MAX_CLOCK_RATE =                     0x00030004,
	RASPBERRYPI_FIRMWARE_GET_MAX_VOLTAGE =                        0x00030005,
	RASPBERRYPI_FIRMWARE_GET_TEMPERATURE =                        0x00030006,
	RASPBERRYPI_FIRMWARE_GET_MIN_CLOCK_RATE =                     0x00030007,
	RASPBERRYPI_FIRMWARE_GET_MIN_VOLTAGE =                        0x00030008,
	RASPBERRYPI_FIRMWARE_GET_TURBO =                              0x00030009,
	RASPBERRYPI_FIRMWARE_GET_MAX_TEMPERATURE =                    0x0003000a,
	RASPBERRYPI_FIRMWARE_ALLOCATE_MEMORY =                        0x0003000c,
	RASPBERRYPI_FIRMWARE_LOCK_MEMORY =                            0x0003000d,
	RASPBERRYPI_FIRMWARE_UNLOCK_MEMORY =                          0x0003000e,
	RASPBERRYPI_FIRMWARE_RELEASE_MEMORY =                         0x0003000f,
	RASPBERRYPI_FIRMWARE_EXECUTE_CODE =                           0x00030010,
	RASPBERRYPI_FIRMWARE_EXECUTE_QPU =                            0x00030011,
	RASPBERRYPI_FIRMWARE_SET_ENABLE_QPU =                         0x00030012,
	RASPBERRYPI_FIRMWARE_GET_DISPMANX_RESOURCE_MEM_HANDLE =       0x00030014,
	RASPBERRYPI_FIRMWARE_GET_EDID_BLOCK =                         0x00030020,
	RASPBERRYPI_FIRMWARE_SET_CLOCK_STATE =                        0x00038001,
	RASPBERRYPI_FIRMWARE_SET_CLOCK_RATE =                         0x00038002,
	RASPBERRYPI_FIRMWARE_SET_VOLTAGE =                            0x00038003,
	RASPBERRYPI_FIRMWARE_SET_TURBO =                              0x00038009,

	/* Dispmanx TAGS */
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_ALLOCATE =                   0x00040001,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_BLANK =                      0x00040002,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_PHYSICAL_WIDTH_HEIGHT =  0x00040003,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_VIRTUAL_WIDTH_HEIGHT =   0x00040004,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_DEPTH =                  0x00040005,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_PIXEL_ORDER =            0x00040006,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_ALPHA_MODE =             0x00040007,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_PITCH =                  0x00040008,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_VIRTUAL_OFFSET =         0x00040009,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_OVERSCAN =               0x0004000a,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_GET_PALETTE =                0x0004000b,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_RELEASE =                    0x00048001,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_TEST_PHYSICAL_WIDTH_HEIGHT = 0x00044003,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_TEST_VIRTUAL_WIDTH_HEIGHT =  0x00044004,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_TEST_DEPTH =                 0x00044005,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_TEST_PIXEL_ORDER =           0x00044006,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_TEST_ALPHA_MODE =            0x00044007,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_TEST_VIRTUAL_OFFSET =        0x00044009,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_TEST_OVERSCAN =              0x0004400a,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_TEST_PALETTE =               0x0004400b,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_SET_PHYSICAL_WIDTH_HEIGHT =  0x00048003,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_SET_VIRTUAL_WIDTH_HEIGHT =   0x00048004,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_SET_DEPTH =                  0x00048005,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_SET_PIXEL_ORDER =            0x00048006,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_SET_ALPHA_MODE =             0x00048007,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_SET_VIRTUAL_OFFSET =         0x00048009,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_SET_OVERSCAN =               0x0004800a,
	RASPBERRYPI_FIRMWARE_FRAMEBUFFER_SET_PALETTE =                0x0004800b,

	RASPBERRYPI_FIRMWARE_GET_COMMAND_LINE =                       0x00050001,
	RASPBERRYPI_FIRMWARE_GET_DMA_CHANNELS =                       0x00060001,
};

int raspberrypi_firmware_property(struct device_node *of_node,
				  u32 tag, void *data, size_t len);
int raspberrypi_firmware_property_list(struct device_node *of_node,
				       void *data, size_t tag_size);
